--------------------------------------------------------------------------------
-- Company: 
-- Engineer:
--
-- Create Date:   12:25:50 11/05/2018
-- Design Name:   
-- Module Name:   H:/Labs/VHDL/trafficlight_controller/trafficlight_controllertb.vhd
-- Project Name:  trafficlight_controller
-- Target Device:  
-- Tool versions:  
-- Description:   
-- 
-- VHDL Test Bench Created by ISE for module: Trafficlight_Controller
-- 
-- Dependencies:
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Notes: 
-- This testbench has been automatically generated using types std_logic and
-- std_logic_vector for the ports of the unit under test.  Xilinx recommends
-- that these types always be used for the top-level I/O of a design in order
-- to guarantee that the testbench will bind correctly to the post-implementation 
-- simulation model.
--------------------------------------------------------------------------------
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY trafficlight_controllertb IS
END trafficlight_controllertb;
 
ARCHITECTURE behavior OF trafficlight_controllertb IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT Trafficlight_Controller
    PORT(
         CLK : IN  std_logic;
         rst : IN  std_logic;
         SAR : IN  std_logic;
         SB : IN  std_logic;
         SCR : IN  std_logic;
         SD : IN  std_logic;
         LAL : OUT  std_logic_vector(2 downto 0);
         LAT : OUT  std_logic_vector(2 downto 0);
         LAR : OUT  std_logic_vector(2 downto 0);
         LBL : OUT  std_logic_vector(2 downto 0);
         LBT : OUT  std_logic_vector(2 downto 0);
         LBR : OUT  std_logic_vector(2 downto 0);
         LCT : OUT  std_logic_vector(2 downto 0);
         LCR : OUT  std_logic_vector(2 downto 0);
         LDT : OUT  std_logic_vector(2 downto 0);
         LDR : OUT  std_logic_vector(2 downto 0)
        );
    END COMPONENT;
    

   --Inputs
   signal CLK : std_logic := '0';
   signal rst : std_logic := '0';
   signal SAR : std_logic := '0';
   signal SB : std_logic := '0';
   signal SCR : std_logic := '0';
   signal SD : std_logic := '0';

 	--Outputs
   signal LAL : std_logic_vector(2 downto 0);
   signal LAT : std_logic_vector(2 downto 0);
   signal LAR : std_logic_vector(2 downto 0);
   signal LBL : std_logic_vector(2 downto 0);
   signal LBT : std_logic_vector(2 downto 0);
   signal LBR : std_logic_vector(2 downto 0);
   signal LCT : std_logic_vector(2 downto 0);
   signal LCR : std_logic_vector(2 downto 0);
   signal LDT : std_logic_vector(2 downto 0);
   signal LDR : std_logic_vector(2 downto 0);

   -- Clock period definitions
   constant CLK_period : time := 10 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: Trafficlight_Controller PORT MAP (
          CLK => CLK,
          rst => rst,
          SAR => SAR,
          SB => SB,
          SCR => SCR,
          SD => SD,
          LAL => LAL,
          LAT => LAT,
          LAR => LAR,
          LBL => LBL,
          LBT => LBT,
          LBR => LBR,
          LCT => LCT,
          LCR => LCR,
          LDT => LDT,
          LDR => LDR
        );

   -- Clock process definitions
   CLK_process :process
   begin
		CLK <= '0';
		wait for CLK_period/2;
		CLK <= '1';
		wait for CLK_period/2;
   end process;
 

   -- Stimulus process
   stim_proc: process
   begin		
      -- hold reset state for 100 ns.
      wait for 100 ns;	

      wait for CLK_period*10;
		
		
---Sequence Flow 1 - Flow 2 - Flow3 - Flow 1 <<below 2 steps

 SD <= '1';
 SAR <= '0';
  SCR<= '0';
 SB<='1';
  
  wait for CLK_period * 40 * 2 * 1000; 

  
  --wait for 100 ns;
	 		
		
		
---Sequence Flow 1 - Flow 2 - Flow4 - Flow 1 <<below 2 steps

 SD <= '1';
 SAR <= '1';
 SCR<= '1';
 SB<='0';
  
  wait for CLK_period * 47* 2* 1000; 
  
--Sequence Flow 1 - Flow 2 - Flow3 - Flow 4 -- Flow 1 <<below 2 steps
 
 SAR <='1';
  SB <='1';
 SD <= '1';
 SCR<= '1';  
	  
  wait for CLK_period * 47* 2* 1000; 
  	  
 


--Sequence Flow 1 - Flow 2 - Flow3 - Flow 5 -- Flow 1 <<below 2 steps
   SAR <='1';
   SB <='1';
   SD <= '1';
   SCR<= '0'; 	  

  wait for CLK_period * 47* 2* 1000; 
 

--Sequence Flow 1 - Flow 2 - Flow3 - Flow 6 -- Flow 1 <<below 2 steps
   SAR <='0';
   SB <='1';
   SD <= '1';
   SCR<= '1';   

  wait for CLK_period * 47* 2* 1000; 




      -- insert stimulus here 

      wait;
   end process;

END;